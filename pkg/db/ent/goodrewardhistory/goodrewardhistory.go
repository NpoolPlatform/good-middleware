// Code generated by ent, DO NOT EDIT.

package goodrewardhistory

import (
	"entgo.io/ent"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the goodrewardhistory type in the database.
	Label = "good_reward_history"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldGoodID holds the string denoting the good_id field in the database.
	FieldGoodID = "good_id"
	// FieldCoinTypeID holds the string denoting the coin_type_id field in the database.
	FieldCoinTypeID = "coin_type_id"
	// FieldRewardDate holds the string denoting the reward_date field in the database.
	FieldRewardDate = "reward_date"
	// FieldTid holds the string denoting the tid field in the database.
	FieldTid = "tid"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldUnitAmount holds the string denoting the unit_amount field in the database.
	FieldUnitAmount = "unit_amount"
	// FieldUnitNetAmount holds the string denoting the unit_net_amount field in the database.
	FieldUnitNetAmount = "unit_net_amount"
	// Table holds the table name of the goodrewardhistory in the database.
	Table = "good_reward_histories"
)

// Columns holds all SQL columns for goodrewardhistory fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldEntID,
	FieldGoodID,
	FieldCoinTypeID,
	FieldRewardDate,
	FieldTid,
	FieldAmount,
	FieldUnitAmount,
	FieldUnitNetAmount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/good-middleware/pkg/db/ent/runtime"
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultGoodID holds the default value on creation for the "good_id" field.
	DefaultGoodID func() uuid.UUID
	// DefaultCoinTypeID holds the default value on creation for the "coin_type_id" field.
	DefaultCoinTypeID func() uuid.UUID
	// DefaultRewardDate holds the default value on creation for the "reward_date" field.
	DefaultRewardDate func() uint32
	// DefaultTid holds the default value on creation for the "tid" field.
	DefaultTid func() uuid.UUID
	// DefaultAmount holds the default value on creation for the "amount" field.
	DefaultAmount decimal.Decimal
	// DefaultUnitAmount holds the default value on creation for the "unit_amount" field.
	DefaultUnitAmount decimal.Decimal
	// DefaultUnitNetAmount holds the default value on creation for the "unit_net_amount" field.
	DefaultUnitNetAmount decimal.Decimal
)
