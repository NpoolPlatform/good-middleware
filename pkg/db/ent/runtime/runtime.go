// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/appdefaultgood"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/appgood"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/appstock"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/comment"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/deviceinfo"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/extrainfo"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/good"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/goodreward"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/goodrewardhistory"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/like"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/promotion"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/recommend"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/requiredgood"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/schema"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/score"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/stock"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/vendorbrand"
	"github.com/NpoolPlatform/good-middleware/pkg/db/ent/vendorlocation"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	appdefaultgoodMixin := schema.AppDefaultGood{}.Mixin()
	appdefaultgood.Policy = privacy.NewPolicies(appdefaultgoodMixin[0], schema.AppDefaultGood{})
	appdefaultgood.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := appdefaultgood.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	appdefaultgoodMixinFields0 := appdefaultgoodMixin[0].Fields()
	_ = appdefaultgoodMixinFields0
	appdefaultgoodFields := schema.AppDefaultGood{}.Fields()
	_ = appdefaultgoodFields
	// appdefaultgoodDescCreatedAt is the schema descriptor for created_at field.
	appdefaultgoodDescCreatedAt := appdefaultgoodMixinFields0[0].Descriptor()
	// appdefaultgood.DefaultCreatedAt holds the default value on creation for the created_at field.
	appdefaultgood.DefaultCreatedAt = appdefaultgoodDescCreatedAt.Default.(func() uint32)
	// appdefaultgoodDescUpdatedAt is the schema descriptor for updated_at field.
	appdefaultgoodDescUpdatedAt := appdefaultgoodMixinFields0[1].Descriptor()
	// appdefaultgood.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	appdefaultgood.DefaultUpdatedAt = appdefaultgoodDescUpdatedAt.Default.(func() uint32)
	// appdefaultgood.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	appdefaultgood.UpdateDefaultUpdatedAt = appdefaultgoodDescUpdatedAt.UpdateDefault.(func() uint32)
	// appdefaultgoodDescDeletedAt is the schema descriptor for deleted_at field.
	appdefaultgoodDescDeletedAt := appdefaultgoodMixinFields0[2].Descriptor()
	// appdefaultgood.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	appdefaultgood.DefaultDeletedAt = appdefaultgoodDescDeletedAt.Default.(func() uint32)
	// appdefaultgoodDescID is the schema descriptor for id field.
	appdefaultgoodDescID := appdefaultgoodFields[0].Descriptor()
	// appdefaultgood.DefaultID holds the default value on creation for the id field.
	appdefaultgood.DefaultID = appdefaultgoodDescID.Default.(func() uuid.UUID)
	appgoodMixin := schema.AppGood{}.Mixin()
	appgood.Policy = privacy.NewPolicies(appgoodMixin[0], schema.AppGood{})
	appgood.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := appgood.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	appgoodMixinFields0 := appgoodMixin[0].Fields()
	_ = appgoodMixinFields0
	appgoodFields := schema.AppGood{}.Fields()
	_ = appgoodFields
	// appgoodDescCreatedAt is the schema descriptor for created_at field.
	appgoodDescCreatedAt := appgoodMixinFields0[0].Descriptor()
	// appgood.DefaultCreatedAt holds the default value on creation for the created_at field.
	appgood.DefaultCreatedAt = appgoodDescCreatedAt.Default.(func() uint32)
	// appgoodDescUpdatedAt is the schema descriptor for updated_at field.
	appgoodDescUpdatedAt := appgoodMixinFields0[1].Descriptor()
	// appgood.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	appgood.DefaultUpdatedAt = appgoodDescUpdatedAt.Default.(func() uint32)
	// appgood.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	appgood.UpdateDefaultUpdatedAt = appgoodDescUpdatedAt.UpdateDefault.(func() uint32)
	// appgoodDescDeletedAt is the schema descriptor for deleted_at field.
	appgoodDescDeletedAt := appgoodMixinFields0[2].Descriptor()
	// appgood.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	appgood.DefaultDeletedAt = appgoodDescDeletedAt.Default.(func() uint32)
	// appgoodDescOnline is the schema descriptor for online field.
	appgoodDescOnline := appgoodFields[3].Descriptor()
	// appgood.DefaultOnline holds the default value on creation for the online field.
	appgood.DefaultOnline = appgoodDescOnline.Default.(bool)
	// appgoodDescVisible is the schema descriptor for visible field.
	appgoodDescVisible := appgoodFields[4].Descriptor()
	// appgood.DefaultVisible holds the default value on creation for the visible field.
	appgood.DefaultVisible = appgoodDescVisible.Default.(bool)
	// appgoodDescGoodName is the schema descriptor for good_name field.
	appgoodDescGoodName := appgoodFields[5].Descriptor()
	// appgood.DefaultGoodName holds the default value on creation for the good_name field.
	appgood.DefaultGoodName = appgoodDescGoodName.Default.(string)
	// appgoodDescPrice is the schema descriptor for price field.
	appgoodDescPrice := appgoodFields[6].Descriptor()
	// appgood.DefaultPrice holds the default value on creation for the price field.
	appgood.DefaultPrice = appgoodDescPrice.Default.(decimal.Decimal)
	// appgoodDescDisplayIndex is the schema descriptor for display_index field.
	appgoodDescDisplayIndex := appgoodFields[7].Descriptor()
	// appgood.DefaultDisplayIndex holds the default value on creation for the display_index field.
	appgood.DefaultDisplayIndex = appgoodDescDisplayIndex.Default.(int32)
	// appgoodDescPurchaseLimit is the schema descriptor for purchase_limit field.
	appgoodDescPurchaseLimit := appgoodFields[8].Descriptor()
	// appgood.DefaultPurchaseLimit holds the default value on creation for the purchase_limit field.
	appgood.DefaultPurchaseLimit = appgoodDescPurchaseLimit.Default.(int32)
	// appgoodDescSaleStartAt is the schema descriptor for sale_start_at field.
	appgoodDescSaleStartAt := appgoodFields[9].Descriptor()
	// appgood.DefaultSaleStartAt holds the default value on creation for the sale_start_at field.
	appgood.DefaultSaleStartAt = appgoodDescSaleStartAt.Default.(uint32)
	// appgoodDescSaleEndAt is the schema descriptor for sale_end_at field.
	appgoodDescSaleEndAt := appgoodFields[10].Descriptor()
	// appgood.DefaultSaleEndAt holds the default value on creation for the sale_end_at field.
	appgood.DefaultSaleEndAt = appgoodDescSaleEndAt.Default.(uint32)
	// appgoodDescServiceStartAt is the schema descriptor for service_start_at field.
	appgoodDescServiceStartAt := appgoodFields[11].Descriptor()
	// appgood.DefaultServiceStartAt holds the default value on creation for the service_start_at field.
	appgood.DefaultServiceStartAt = appgoodDescServiceStartAt.Default.(uint32)
	// appgoodDescDescriptions is the schema descriptor for descriptions field.
	appgoodDescDescriptions := appgoodFields[12].Descriptor()
	// appgood.DefaultDescriptions holds the default value on creation for the descriptions field.
	appgood.DefaultDescriptions = appgoodDescDescriptions.Default.([]string)
	// appgoodDescGoodBanner is the schema descriptor for good_banner field.
	appgoodDescGoodBanner := appgoodFields[13].Descriptor()
	// appgood.DefaultGoodBanner holds the default value on creation for the good_banner field.
	appgood.DefaultGoodBanner = appgoodDescGoodBanner.Default.(string)
	// appgoodDescDisplayNames is the schema descriptor for display_names field.
	appgoodDescDisplayNames := appgoodFields[14].Descriptor()
	// appgood.DefaultDisplayNames holds the default value on creation for the display_names field.
	appgood.DefaultDisplayNames = appgoodDescDisplayNames.Default.([]string)
	// appgoodDescEnablePurchase is the schema descriptor for enable_purchase field.
	appgoodDescEnablePurchase := appgoodFields[15].Descriptor()
	// appgood.DefaultEnablePurchase holds the default value on creation for the enable_purchase field.
	appgood.DefaultEnablePurchase = appgoodDescEnablePurchase.Default.(bool)
	// appgoodDescEnableProductPage is the schema descriptor for enable_product_page field.
	appgoodDescEnableProductPage := appgoodFields[16].Descriptor()
	// appgood.DefaultEnableProductPage holds the default value on creation for the enable_product_page field.
	appgood.DefaultEnableProductPage = appgoodDescEnableProductPage.Default.(bool)
	// appgoodDescCancelMode is the schema descriptor for cancel_mode field.
	appgoodDescCancelMode := appgoodFields[17].Descriptor()
	// appgood.DefaultCancelMode holds the default value on creation for the cancel_mode field.
	appgood.DefaultCancelMode = appgoodDescCancelMode.Default.(string)
	// appgoodDescDisplayColors is the schema descriptor for display_colors field.
	appgoodDescDisplayColors := appgoodFields[19].Descriptor()
	// appgood.DefaultDisplayColors holds the default value on creation for the display_colors field.
	appgood.DefaultDisplayColors = appgoodDescDisplayColors.Default.([]string)
	// appgoodDescCancellableBeforeStart is the schema descriptor for cancellable_before_start field.
	appgoodDescCancellableBeforeStart := appgoodFields[20].Descriptor()
	// appgood.DefaultCancellableBeforeStart holds the default value on creation for the cancellable_before_start field.
	appgood.DefaultCancellableBeforeStart = appgoodDescCancellableBeforeStart.Default.(uint32)
	// appgoodDescProductPage is the schema descriptor for product_page field.
	appgoodDescProductPage := appgoodFields[21].Descriptor()
	// appgood.DefaultProductPage holds the default value on creation for the product_page field.
	appgood.DefaultProductPage = appgoodDescProductPage.Default.(string)
	// appgoodDescEnableSetCommission is the schema descriptor for enable_set_commission field.
	appgoodDescEnableSetCommission := appgoodFields[22].Descriptor()
	// appgood.DefaultEnableSetCommission holds the default value on creation for the enable_set_commission field.
	appgood.DefaultEnableSetCommission = appgoodDescEnableSetCommission.Default.(bool)
	// appgoodDescPosters is the schema descriptor for posters field.
	appgoodDescPosters := appgoodFields[23].Descriptor()
	// appgood.DefaultPosters holds the default value on creation for the posters field.
	appgood.DefaultPosters = appgoodDescPosters.Default.([]string)
	// appgoodDescID is the schema descriptor for id field.
	appgoodDescID := appgoodFields[0].Descriptor()
	// appgood.DefaultID holds the default value on creation for the id field.
	appgood.DefaultID = appgoodDescID.Default.(func() uuid.UUID)
	appstockMixin := schema.AppStock{}.Mixin()
	appstock.Policy = privacy.NewPolicies(appstockMixin[0], schema.AppStock{})
	appstock.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := appstock.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	appstockMixinFields0 := appstockMixin[0].Fields()
	_ = appstockMixinFields0
	appstockFields := schema.AppStock{}.Fields()
	_ = appstockFields
	// appstockDescCreatedAt is the schema descriptor for created_at field.
	appstockDescCreatedAt := appstockMixinFields0[0].Descriptor()
	// appstock.DefaultCreatedAt holds the default value on creation for the created_at field.
	appstock.DefaultCreatedAt = appstockDescCreatedAt.Default.(func() uint32)
	// appstockDescUpdatedAt is the schema descriptor for updated_at field.
	appstockDescUpdatedAt := appstockMixinFields0[1].Descriptor()
	// appstock.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	appstock.DefaultUpdatedAt = appstockDescUpdatedAt.Default.(func() uint32)
	// appstock.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	appstock.UpdateDefaultUpdatedAt = appstockDescUpdatedAt.UpdateDefault.(func() uint32)
	// appstockDescDeletedAt is the schema descriptor for deleted_at field.
	appstockDescDeletedAt := appstockMixinFields0[2].Descriptor()
	// appstock.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	appstock.DefaultDeletedAt = appstockDescDeletedAt.Default.(func() uint32)
	// appstockDescTotal is the schema descriptor for total field.
	appstockDescTotal := appstockFields[3].Descriptor()
	// appstock.DefaultTotal holds the default value on creation for the total field.
	appstock.DefaultTotal = appstockDescTotal.Default.(decimal.Decimal)
	// appstockDescSpotQuantity is the schema descriptor for spot_quantity field.
	appstockDescSpotQuantity := appstockFields[4].Descriptor()
	// appstock.DefaultSpotQuantity holds the default value on creation for the spot_quantity field.
	appstock.DefaultSpotQuantity = appstockDescSpotQuantity.Default.(decimal.Decimal)
	// appstockDescLocked is the schema descriptor for locked field.
	appstockDescLocked := appstockFields[5].Descriptor()
	// appstock.DefaultLocked holds the default value on creation for the locked field.
	appstock.DefaultLocked = appstockDescLocked.Default.(decimal.Decimal)
	// appstockDescInService is the schema descriptor for in_service field.
	appstockDescInService := appstockFields[6].Descriptor()
	// appstock.DefaultInService holds the default value on creation for the in_service field.
	appstock.DefaultInService = appstockDescInService.Default.(decimal.Decimal)
	// appstockDescWaitStart is the schema descriptor for wait_start field.
	appstockDescWaitStart := appstockFields[7].Descriptor()
	// appstock.DefaultWaitStart holds the default value on creation for the wait_start field.
	appstock.DefaultWaitStart = appstockDescWaitStart.Default.(decimal.Decimal)
	// appstockDescSold is the schema descriptor for sold field.
	appstockDescSold := appstockFields[8].Descriptor()
	// appstock.DefaultSold holds the default value on creation for the sold field.
	appstock.DefaultSold = appstockDescSold.Default.(decimal.Decimal)
	// appstockDescID is the schema descriptor for id field.
	appstockDescID := appstockFields[0].Descriptor()
	// appstock.DefaultID holds the default value on creation for the id field.
	appstock.DefaultID = appstockDescID.Default.(func() uuid.UUID)
	commentMixin := schema.Comment{}.Mixin()
	comment.Policy = privacy.NewPolicies(commentMixin[0], schema.Comment{})
	comment.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := comment.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	commentMixinFields0 := commentMixin[0].Fields()
	_ = commentMixinFields0
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentMixinFields0[0].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() uint32)
	// commentDescUpdatedAt is the schema descriptor for updated_at field.
	commentDescUpdatedAt := commentMixinFields0[1].Descriptor()
	// comment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	comment.DefaultUpdatedAt = commentDescUpdatedAt.Default.(func() uint32)
	// comment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	comment.UpdateDefaultUpdatedAt = commentDescUpdatedAt.UpdateDefault.(func() uint32)
	// commentDescDeletedAt is the schema descriptor for deleted_at field.
	commentDescDeletedAt := commentMixinFields0[2].Descriptor()
	// comment.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	comment.DefaultDeletedAt = commentDescDeletedAt.Default.(func() uint32)
	// commentDescContent is the schema descriptor for content field.
	commentDescContent := commentFields[5].Descriptor()
	// comment.DefaultContent holds the default value on creation for the content field.
	comment.DefaultContent = commentDescContent.Default.(string)
	// commentDescReplyToID is the schema descriptor for reply_to_id field.
	commentDescReplyToID := commentFields[6].Descriptor()
	// comment.DefaultReplyToID holds the default value on creation for the reply_to_id field.
	comment.DefaultReplyToID = commentDescReplyToID.Default.(func() uuid.UUID)
	// commentDescID is the schema descriptor for id field.
	commentDescID := commentFields[0].Descriptor()
	// comment.DefaultID holds the default value on creation for the id field.
	comment.DefaultID = commentDescID.Default.(func() uuid.UUID)
	deviceinfoMixin := schema.DeviceInfo{}.Mixin()
	deviceinfo.Policy = privacy.NewPolicies(deviceinfoMixin[0], schema.DeviceInfo{})
	deviceinfo.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := deviceinfo.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	deviceinfoMixinFields0 := deviceinfoMixin[0].Fields()
	_ = deviceinfoMixinFields0
	deviceinfoFields := schema.DeviceInfo{}.Fields()
	_ = deviceinfoFields
	// deviceinfoDescCreatedAt is the schema descriptor for created_at field.
	deviceinfoDescCreatedAt := deviceinfoMixinFields0[0].Descriptor()
	// deviceinfo.DefaultCreatedAt holds the default value on creation for the created_at field.
	deviceinfo.DefaultCreatedAt = deviceinfoDescCreatedAt.Default.(func() uint32)
	// deviceinfoDescUpdatedAt is the schema descriptor for updated_at field.
	deviceinfoDescUpdatedAt := deviceinfoMixinFields0[1].Descriptor()
	// deviceinfo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	deviceinfo.DefaultUpdatedAt = deviceinfoDescUpdatedAt.Default.(func() uint32)
	// deviceinfo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	deviceinfo.UpdateDefaultUpdatedAt = deviceinfoDescUpdatedAt.UpdateDefault.(func() uint32)
	// deviceinfoDescDeletedAt is the schema descriptor for deleted_at field.
	deviceinfoDescDeletedAt := deviceinfoMixinFields0[2].Descriptor()
	// deviceinfo.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	deviceinfo.DefaultDeletedAt = deviceinfoDescDeletedAt.Default.(func() uint32)
	// deviceinfoDescType is the schema descriptor for type field.
	deviceinfoDescType := deviceinfoFields[1].Descriptor()
	// deviceinfo.DefaultType holds the default value on creation for the type field.
	deviceinfo.DefaultType = deviceinfoDescType.Default.(string)
	// deviceinfo.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	deviceinfo.TypeValidator = deviceinfoDescType.Validators[0].(func(string) error)
	// deviceinfoDescManufacturer is the schema descriptor for manufacturer field.
	deviceinfoDescManufacturer := deviceinfoFields[2].Descriptor()
	// deviceinfo.DefaultManufacturer holds the default value on creation for the manufacturer field.
	deviceinfo.DefaultManufacturer = deviceinfoDescManufacturer.Default.(string)
	// deviceinfo.ManufacturerValidator is a validator for the "manufacturer" field. It is called by the builders before save.
	deviceinfo.ManufacturerValidator = deviceinfoDescManufacturer.Validators[0].(func(string) error)
	// deviceinfoDescPowerComsuption is the schema descriptor for power_comsuption field.
	deviceinfoDescPowerComsuption := deviceinfoFields[3].Descriptor()
	// deviceinfo.DefaultPowerComsuption holds the default value on creation for the power_comsuption field.
	deviceinfo.DefaultPowerComsuption = deviceinfoDescPowerComsuption.Default.(uint32)
	// deviceinfoDescShipmentAt is the schema descriptor for shipment_at field.
	deviceinfoDescShipmentAt := deviceinfoFields[4].Descriptor()
	// deviceinfo.DefaultShipmentAt holds the default value on creation for the shipment_at field.
	deviceinfo.DefaultShipmentAt = deviceinfoDescShipmentAt.Default.(uint32)
	// deviceinfoDescPosters is the schema descriptor for posters field.
	deviceinfoDescPosters := deviceinfoFields[5].Descriptor()
	// deviceinfo.DefaultPosters holds the default value on creation for the posters field.
	deviceinfo.DefaultPosters = deviceinfoDescPosters.Default.([]string)
	// deviceinfoDescID is the schema descriptor for id field.
	deviceinfoDescID := deviceinfoFields[0].Descriptor()
	// deviceinfo.DefaultID holds the default value on creation for the id field.
	deviceinfo.DefaultID = deviceinfoDescID.Default.(func() uuid.UUID)
	extrainfoMixin := schema.ExtraInfo{}.Mixin()
	extrainfo.Policy = privacy.NewPolicies(extrainfoMixin[0], schema.ExtraInfo{})
	extrainfo.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := extrainfo.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	extrainfoMixinFields0 := extrainfoMixin[0].Fields()
	_ = extrainfoMixinFields0
	extrainfoFields := schema.ExtraInfo{}.Fields()
	_ = extrainfoFields
	// extrainfoDescCreatedAt is the schema descriptor for created_at field.
	extrainfoDescCreatedAt := extrainfoMixinFields0[0].Descriptor()
	// extrainfo.DefaultCreatedAt holds the default value on creation for the created_at field.
	extrainfo.DefaultCreatedAt = extrainfoDescCreatedAt.Default.(func() uint32)
	// extrainfoDescUpdatedAt is the schema descriptor for updated_at field.
	extrainfoDescUpdatedAt := extrainfoMixinFields0[1].Descriptor()
	// extrainfo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	extrainfo.DefaultUpdatedAt = extrainfoDescUpdatedAt.Default.(func() uint32)
	// extrainfo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	extrainfo.UpdateDefaultUpdatedAt = extrainfoDescUpdatedAt.UpdateDefault.(func() uint32)
	// extrainfoDescDeletedAt is the schema descriptor for deleted_at field.
	extrainfoDescDeletedAt := extrainfoMixinFields0[2].Descriptor()
	// extrainfo.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	extrainfo.DefaultDeletedAt = extrainfoDescDeletedAt.Default.(func() uint32)
	// extrainfoDescPosters is the schema descriptor for posters field.
	extrainfoDescPosters := extrainfoFields[2].Descriptor()
	// extrainfo.DefaultPosters holds the default value on creation for the posters field.
	extrainfo.DefaultPosters = extrainfoDescPosters.Default.([]string)
	// extrainfoDescLabels is the schema descriptor for labels field.
	extrainfoDescLabels := extrainfoFields[3].Descriptor()
	// extrainfo.DefaultLabels holds the default value on creation for the labels field.
	extrainfo.DefaultLabels = extrainfoDescLabels.Default.([]string)
	// extrainfoDescLikes is the schema descriptor for likes field.
	extrainfoDescLikes := extrainfoFields[4].Descriptor()
	// extrainfo.DefaultLikes holds the default value on creation for the likes field.
	extrainfo.DefaultLikes = extrainfoDescLikes.Default.(uint32)
	// extrainfoDescDislikes is the schema descriptor for dislikes field.
	extrainfoDescDislikes := extrainfoFields[5].Descriptor()
	// extrainfo.DefaultDislikes holds the default value on creation for the dislikes field.
	extrainfo.DefaultDislikes = extrainfoDescDislikes.Default.(uint32)
	// extrainfoDescScoreCount is the schema descriptor for score_count field.
	extrainfoDescScoreCount := extrainfoFields[6].Descriptor()
	// extrainfo.DefaultScoreCount holds the default value on creation for the score_count field.
	extrainfo.DefaultScoreCount = extrainfoDescScoreCount.Default.(uint32)
	// extrainfoDescScore is the schema descriptor for score field.
	extrainfoDescScore := extrainfoFields[7].Descriptor()
	// extrainfo.DefaultScore holds the default value on creation for the score field.
	extrainfo.DefaultScore = extrainfoDescScore.Default.(decimal.Decimal)
	// extrainfoDescID is the schema descriptor for id field.
	extrainfoDescID := extrainfoFields[0].Descriptor()
	// extrainfo.DefaultID holds the default value on creation for the id field.
	extrainfo.DefaultID = extrainfoDescID.Default.(func() uuid.UUID)
	goodMixin := schema.Good{}.Mixin()
	good.Policy = privacy.NewPolicies(goodMixin[0], schema.Good{})
	good.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := good.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	goodMixinFields0 := goodMixin[0].Fields()
	_ = goodMixinFields0
	goodFields := schema.Good{}.Fields()
	_ = goodFields
	// goodDescCreatedAt is the schema descriptor for created_at field.
	goodDescCreatedAt := goodMixinFields0[0].Descriptor()
	// good.DefaultCreatedAt holds the default value on creation for the created_at field.
	good.DefaultCreatedAt = goodDescCreatedAt.Default.(func() uint32)
	// goodDescUpdatedAt is the schema descriptor for updated_at field.
	goodDescUpdatedAt := goodMixinFields0[1].Descriptor()
	// good.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	good.DefaultUpdatedAt = goodDescUpdatedAt.Default.(func() uint32)
	// good.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	good.UpdateDefaultUpdatedAt = goodDescUpdatedAt.UpdateDefault.(func() uint32)
	// goodDescDeletedAt is the schema descriptor for deleted_at field.
	goodDescDeletedAt := goodMixinFields0[2].Descriptor()
	// good.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	good.DefaultDeletedAt = goodDescDeletedAt.Default.(func() uint32)
	// goodDescDurationDays is the schema descriptor for duration_days field.
	goodDescDurationDays := goodFields[2].Descriptor()
	// good.DefaultDurationDays holds the default value on creation for the duration_days field.
	good.DefaultDurationDays = goodDescDurationDays.Default.(int32)
	// goodDescInheritFromGoodID is the schema descriptor for inherit_from_good_id field.
	goodDescInheritFromGoodID := goodFields[4].Descriptor()
	// good.DefaultInheritFromGoodID holds the default value on creation for the inherit_from_good_id field.
	good.DefaultInheritFromGoodID = goodDescInheritFromGoodID.Default.(func() uuid.UUID)
	// goodDescPrice is the schema descriptor for price field.
	goodDescPrice := goodFields[6].Descriptor()
	// good.DefaultPrice holds the default value on creation for the price field.
	good.DefaultPrice = goodDescPrice.Default.(decimal.Decimal)
	// goodDescBenefitType is the schema descriptor for benefit_type field.
	goodDescBenefitType := goodFields[7].Descriptor()
	// good.DefaultBenefitType holds the default value on creation for the benefit_type field.
	good.DefaultBenefitType = goodDescBenefitType.Default.(string)
	// goodDescGoodType is the schema descriptor for good_type field.
	goodDescGoodType := goodFields[8].Descriptor()
	// good.DefaultGoodType holds the default value on creation for the good_type field.
	good.DefaultGoodType = goodDescGoodType.Default.(string)
	// goodDescTitle is the schema descriptor for title field.
	goodDescTitle := goodFields[9].Descriptor()
	// good.DefaultTitle holds the default value on creation for the title field.
	good.DefaultTitle = goodDescTitle.Default.(string)
	// goodDescUnit is the schema descriptor for unit field.
	goodDescUnit := goodFields[10].Descriptor()
	// good.DefaultUnit holds the default value on creation for the unit field.
	good.DefaultUnit = goodDescUnit.Default.(string)
	// goodDescUnitAmount is the schema descriptor for unit_amount field.
	goodDescUnitAmount := goodFields[11].Descriptor()
	// good.DefaultUnitAmount holds the default value on creation for the unit_amount field.
	good.DefaultUnitAmount = goodDescUnitAmount.Default.(int32)
	// goodDescSupportCoinTypeIds is the schema descriptor for support_coin_type_ids field.
	goodDescSupportCoinTypeIds := goodFields[12].Descriptor()
	// good.DefaultSupportCoinTypeIds holds the default value on creation for the support_coin_type_ids field.
	good.DefaultSupportCoinTypeIds = goodDescSupportCoinTypeIds.Default.([]uuid.UUID)
	// goodDescDeliveryAt is the schema descriptor for delivery_at field.
	goodDescDeliveryAt := goodFields[13].Descriptor()
	// good.DefaultDeliveryAt holds the default value on creation for the delivery_at field.
	good.DefaultDeliveryAt = goodDescDeliveryAt.Default.(uint32)
	// goodDescStartAt is the schema descriptor for start_at field.
	goodDescStartAt := goodFields[14].Descriptor()
	// good.DefaultStartAt holds the default value on creation for the start_at field.
	good.DefaultStartAt = goodDescStartAt.Default.(uint32)
	// goodDescTestOnly is the schema descriptor for test_only field.
	goodDescTestOnly := goodFields[15].Descriptor()
	// good.DefaultTestOnly holds the default value on creation for the test_only field.
	good.DefaultTestOnly = goodDescTestOnly.Default.(bool)
	// goodDescBenefitIntervalHours is the schema descriptor for benefit_interval_hours field.
	goodDescBenefitIntervalHours := goodFields[16].Descriptor()
	// good.DefaultBenefitIntervalHours holds the default value on creation for the benefit_interval_hours field.
	good.DefaultBenefitIntervalHours = goodDescBenefitIntervalHours.Default.(uint32)
	// goodDescUnitLockDeposit is the schema descriptor for unit_lock_deposit field.
	goodDescUnitLockDeposit := goodFields[17].Descriptor()
	// good.DefaultUnitLockDeposit holds the default value on creation for the unit_lock_deposit field.
	good.DefaultUnitLockDeposit = goodDescUnitLockDeposit.Default.(decimal.Decimal)
	// goodDescID is the schema descriptor for id field.
	goodDescID := goodFields[0].Descriptor()
	// good.DefaultID holds the default value on creation for the id field.
	good.DefaultID = goodDescID.Default.(func() uuid.UUID)
	goodrewardMixin := schema.GoodReward{}.Mixin()
	goodreward.Policy = privacy.NewPolicies(goodrewardMixin[0], schema.GoodReward{})
	goodreward.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := goodreward.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	goodrewardMixinFields0 := goodrewardMixin[0].Fields()
	_ = goodrewardMixinFields0
	goodrewardFields := schema.GoodReward{}.Fields()
	_ = goodrewardFields
	// goodrewardDescCreatedAt is the schema descriptor for created_at field.
	goodrewardDescCreatedAt := goodrewardMixinFields0[0].Descriptor()
	// goodreward.DefaultCreatedAt holds the default value on creation for the created_at field.
	goodreward.DefaultCreatedAt = goodrewardDescCreatedAt.Default.(func() uint32)
	// goodrewardDescUpdatedAt is the schema descriptor for updated_at field.
	goodrewardDescUpdatedAt := goodrewardMixinFields0[1].Descriptor()
	// goodreward.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	goodreward.DefaultUpdatedAt = goodrewardDescUpdatedAt.Default.(func() uint32)
	// goodreward.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	goodreward.UpdateDefaultUpdatedAt = goodrewardDescUpdatedAt.UpdateDefault.(func() uint32)
	// goodrewardDescDeletedAt is the schema descriptor for deleted_at field.
	goodrewardDescDeletedAt := goodrewardMixinFields0[2].Descriptor()
	// goodreward.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	goodreward.DefaultDeletedAt = goodrewardDescDeletedAt.Default.(func() uint32)
	// goodrewardDescRewardState is the schema descriptor for reward_state field.
	goodrewardDescRewardState := goodrewardFields[2].Descriptor()
	// goodreward.DefaultRewardState holds the default value on creation for the reward_state field.
	goodreward.DefaultRewardState = goodrewardDescRewardState.Default.(string)
	// goodrewardDescLastRewardAt is the schema descriptor for last_reward_at field.
	goodrewardDescLastRewardAt := goodrewardFields[3].Descriptor()
	// goodreward.DefaultLastRewardAt holds the default value on creation for the last_reward_at field.
	goodreward.DefaultLastRewardAt = goodrewardDescLastRewardAt.Default.(uint32)
	// goodrewardDescRewardTid is the schema descriptor for reward_tid field.
	goodrewardDescRewardTid := goodrewardFields[4].Descriptor()
	// goodreward.DefaultRewardTid holds the default value on creation for the reward_tid field.
	goodreward.DefaultRewardTid = goodrewardDescRewardTid.Default.(func() uuid.UUID)
	// goodrewardDescNextRewardStartAmount is the schema descriptor for next_reward_start_amount field.
	goodrewardDescNextRewardStartAmount := goodrewardFields[5].Descriptor()
	// goodreward.DefaultNextRewardStartAmount holds the default value on creation for the next_reward_start_amount field.
	goodreward.DefaultNextRewardStartAmount = goodrewardDescNextRewardStartAmount.Default.(decimal.Decimal)
	// goodrewardDescLastRewardAmount is the schema descriptor for last_reward_amount field.
	goodrewardDescLastRewardAmount := goodrewardFields[6].Descriptor()
	// goodreward.DefaultLastRewardAmount holds the default value on creation for the last_reward_amount field.
	goodreward.DefaultLastRewardAmount = goodrewardDescLastRewardAmount.Default.(decimal.Decimal)
	// goodrewardDescID is the schema descriptor for id field.
	goodrewardDescID := goodrewardFields[0].Descriptor()
	// goodreward.DefaultID holds the default value on creation for the id field.
	goodreward.DefaultID = goodrewardDescID.Default.(func() uuid.UUID)
	goodrewardhistoryMixin := schema.GoodRewardHistory{}.Mixin()
	goodrewardhistory.Policy = privacy.NewPolicies(goodrewardhistoryMixin[0], schema.GoodRewardHistory{})
	goodrewardhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := goodrewardhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	goodrewardhistoryMixinFields0 := goodrewardhistoryMixin[0].Fields()
	_ = goodrewardhistoryMixinFields0
	goodrewardhistoryFields := schema.GoodRewardHistory{}.Fields()
	_ = goodrewardhistoryFields
	// goodrewardhistoryDescCreatedAt is the schema descriptor for created_at field.
	goodrewardhistoryDescCreatedAt := goodrewardhistoryMixinFields0[0].Descriptor()
	// goodrewardhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	goodrewardhistory.DefaultCreatedAt = goodrewardhistoryDescCreatedAt.Default.(func() uint32)
	// goodrewardhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	goodrewardhistoryDescUpdatedAt := goodrewardhistoryMixinFields0[1].Descriptor()
	// goodrewardhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	goodrewardhistory.DefaultUpdatedAt = goodrewardhistoryDescUpdatedAt.Default.(func() uint32)
	// goodrewardhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	goodrewardhistory.UpdateDefaultUpdatedAt = goodrewardhistoryDescUpdatedAt.UpdateDefault.(func() uint32)
	// goodrewardhistoryDescDeletedAt is the schema descriptor for deleted_at field.
	goodrewardhistoryDescDeletedAt := goodrewardhistoryMixinFields0[2].Descriptor()
	// goodrewardhistory.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	goodrewardhistory.DefaultDeletedAt = goodrewardhistoryDescDeletedAt.Default.(func() uint32)
	// goodrewardhistoryDescRewardDate is the schema descriptor for reward_date field.
	goodrewardhistoryDescRewardDate := goodrewardhistoryFields[3].Descriptor()
	// goodrewardhistory.DefaultRewardDate holds the default value on creation for the reward_date field.
	goodrewardhistory.DefaultRewardDate = goodrewardhistoryDescRewardDate.Default.(uint32)
	// goodrewardhistoryDescTid is the schema descriptor for tid field.
	goodrewardhistoryDescTid := goodrewardhistoryFields[4].Descriptor()
	// goodrewardhistory.DefaultTid holds the default value on creation for the tid field.
	goodrewardhistory.DefaultTid = goodrewardhistoryDescTid.Default.(func() uuid.UUID)
	// goodrewardhistoryDescAmount is the schema descriptor for amount field.
	goodrewardhistoryDescAmount := goodrewardhistoryFields[5].Descriptor()
	// goodrewardhistory.DefaultAmount holds the default value on creation for the amount field.
	goodrewardhistory.DefaultAmount = goodrewardhistoryDescAmount.Default.(decimal.Decimal)
	// goodrewardhistoryDescUnitAmount is the schema descriptor for unit_amount field.
	goodrewardhistoryDescUnitAmount := goodrewardhistoryFields[6].Descriptor()
	// goodrewardhistory.DefaultUnitAmount holds the default value on creation for the unit_amount field.
	goodrewardhistory.DefaultUnitAmount = goodrewardhistoryDescUnitAmount.Default.(decimal.Decimal)
	// goodrewardhistoryDescUnitNetAmount is the schema descriptor for unit_net_amount field.
	goodrewardhistoryDescUnitNetAmount := goodrewardhistoryFields[7].Descriptor()
	// goodrewardhistory.DefaultUnitNetAmount holds the default value on creation for the unit_net_amount field.
	goodrewardhistory.DefaultUnitNetAmount = goodrewardhistoryDescUnitNetAmount.Default.(decimal.Decimal)
	// goodrewardhistoryDescResult is the schema descriptor for result field.
	goodrewardhistoryDescResult := goodrewardhistoryFields[8].Descriptor()
	// goodrewardhistory.DefaultResult holds the default value on creation for the result field.
	goodrewardhistory.DefaultResult = goodrewardhistoryDescResult.Default.(string)
	// goodrewardhistoryDescID is the schema descriptor for id field.
	goodrewardhistoryDescID := goodrewardhistoryFields[0].Descriptor()
	// goodrewardhistory.DefaultID holds the default value on creation for the id field.
	goodrewardhistory.DefaultID = goodrewardhistoryDescID.Default.(func() uuid.UUID)
	likeMixin := schema.Like{}.Mixin()
	like.Policy = privacy.NewPolicies(likeMixin[0], schema.Like{})
	like.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := like.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	likeMixinFields0 := likeMixin[0].Fields()
	_ = likeMixinFields0
	likeFields := schema.Like{}.Fields()
	_ = likeFields
	// likeDescCreatedAt is the schema descriptor for created_at field.
	likeDescCreatedAt := likeMixinFields0[0].Descriptor()
	// like.DefaultCreatedAt holds the default value on creation for the created_at field.
	like.DefaultCreatedAt = likeDescCreatedAt.Default.(func() uint32)
	// likeDescUpdatedAt is the schema descriptor for updated_at field.
	likeDescUpdatedAt := likeMixinFields0[1].Descriptor()
	// like.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	like.DefaultUpdatedAt = likeDescUpdatedAt.Default.(func() uint32)
	// like.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	like.UpdateDefaultUpdatedAt = likeDescUpdatedAt.UpdateDefault.(func() uint32)
	// likeDescDeletedAt is the schema descriptor for deleted_at field.
	likeDescDeletedAt := likeMixinFields0[2].Descriptor()
	// like.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	like.DefaultDeletedAt = likeDescDeletedAt.Default.(func() uint32)
	// likeDescID is the schema descriptor for id field.
	likeDescID := likeFields[0].Descriptor()
	// like.DefaultID holds the default value on creation for the id field.
	like.DefaultID = likeDescID.Default.(func() uuid.UUID)
	promotionMixin := schema.Promotion{}.Mixin()
	promotion.Policy = privacy.NewPolicies(promotionMixin[0], schema.Promotion{})
	promotion.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := promotion.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	promotionMixinFields0 := promotionMixin[0].Fields()
	_ = promotionMixinFields0
	promotionFields := schema.Promotion{}.Fields()
	_ = promotionFields
	// promotionDescCreatedAt is the schema descriptor for created_at field.
	promotionDescCreatedAt := promotionMixinFields0[0].Descriptor()
	// promotion.DefaultCreatedAt holds the default value on creation for the created_at field.
	promotion.DefaultCreatedAt = promotionDescCreatedAt.Default.(func() uint32)
	// promotionDescUpdatedAt is the schema descriptor for updated_at field.
	promotionDescUpdatedAt := promotionMixinFields0[1].Descriptor()
	// promotion.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	promotion.DefaultUpdatedAt = promotionDescUpdatedAt.Default.(func() uint32)
	// promotion.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	promotion.UpdateDefaultUpdatedAt = promotionDescUpdatedAt.UpdateDefault.(func() uint32)
	// promotionDescDeletedAt is the schema descriptor for deleted_at field.
	promotionDescDeletedAt := promotionMixinFields0[2].Descriptor()
	// promotion.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	promotion.DefaultDeletedAt = promotionDescDeletedAt.Default.(func() uint32)
	// promotionDescMessage is the schema descriptor for message field.
	promotionDescMessage := promotionFields[3].Descriptor()
	// promotion.DefaultMessage holds the default value on creation for the message field.
	promotion.DefaultMessage = promotionDescMessage.Default.(string)
	// promotionDescStartAt is the schema descriptor for start_at field.
	promotionDescStartAt := promotionFields[4].Descriptor()
	// promotion.DefaultStartAt holds the default value on creation for the start_at field.
	promotion.DefaultStartAt = promotionDescStartAt.Default.(uint32)
	// promotionDescEndAt is the schema descriptor for end_at field.
	promotionDescEndAt := promotionFields[5].Descriptor()
	// promotion.DefaultEndAt holds the default value on creation for the end_at field.
	promotion.DefaultEndAt = promotionDescEndAt.Default.(uint32)
	// promotionDescPrice is the schema descriptor for price field.
	promotionDescPrice := promotionFields[6].Descriptor()
	// promotion.DefaultPrice holds the default value on creation for the price field.
	promotion.DefaultPrice = promotionDescPrice.Default.(decimal.Decimal)
	// promotionDescPosters is the schema descriptor for posters field.
	promotionDescPosters := promotionFields[7].Descriptor()
	// promotion.DefaultPosters holds the default value on creation for the posters field.
	promotion.DefaultPosters = promotionDescPosters.Default.([]string)
	// promotionDescID is the schema descriptor for id field.
	promotionDescID := promotionFields[0].Descriptor()
	// promotion.DefaultID holds the default value on creation for the id field.
	promotion.DefaultID = promotionDescID.Default.(func() uuid.UUID)
	recommendMixin := schema.Recommend{}.Mixin()
	recommend.Policy = privacy.NewPolicies(recommendMixin[0], schema.Recommend{})
	recommend.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := recommend.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	recommendMixinFields0 := recommendMixin[0].Fields()
	_ = recommendMixinFields0
	recommendFields := schema.Recommend{}.Fields()
	_ = recommendFields
	// recommendDescCreatedAt is the schema descriptor for created_at field.
	recommendDescCreatedAt := recommendMixinFields0[0].Descriptor()
	// recommend.DefaultCreatedAt holds the default value on creation for the created_at field.
	recommend.DefaultCreatedAt = recommendDescCreatedAt.Default.(func() uint32)
	// recommendDescUpdatedAt is the schema descriptor for updated_at field.
	recommendDescUpdatedAt := recommendMixinFields0[1].Descriptor()
	// recommend.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	recommend.DefaultUpdatedAt = recommendDescUpdatedAt.Default.(func() uint32)
	// recommend.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	recommend.UpdateDefaultUpdatedAt = recommendDescUpdatedAt.UpdateDefault.(func() uint32)
	// recommendDescDeletedAt is the schema descriptor for deleted_at field.
	recommendDescDeletedAt := recommendMixinFields0[2].Descriptor()
	// recommend.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	recommend.DefaultDeletedAt = recommendDescDeletedAt.Default.(func() uint32)
	// recommendDescRecommenderID is the schema descriptor for recommender_id field.
	recommendDescRecommenderID := recommendFields[3].Descriptor()
	// recommend.DefaultRecommenderID holds the default value on creation for the recommender_id field.
	recommend.DefaultRecommenderID = recommendDescRecommenderID.Default.(func() uuid.UUID)
	// recommendDescMessage is the schema descriptor for message field.
	recommendDescMessage := recommendFields[4].Descriptor()
	// recommend.DefaultMessage holds the default value on creation for the message field.
	recommend.DefaultMessage = recommendDescMessage.Default.(string)
	// recommendDescRecommendIndex is the schema descriptor for recommend_index field.
	recommendDescRecommendIndex := recommendFields[5].Descriptor()
	// recommend.DefaultRecommendIndex holds the default value on creation for the recommend_index field.
	recommend.DefaultRecommendIndex = recommendDescRecommendIndex.Default.(decimal.Decimal)
	// recommendDescID is the schema descriptor for id field.
	recommendDescID := recommendFields[0].Descriptor()
	// recommend.DefaultID holds the default value on creation for the id field.
	recommend.DefaultID = recommendDescID.Default.(func() uuid.UUID)
	requiredgoodMixin := schema.RequiredGood{}.Mixin()
	requiredgood.Policy = privacy.NewPolicies(requiredgoodMixin[0], schema.RequiredGood{})
	requiredgood.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := requiredgood.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	requiredgoodMixinFields0 := requiredgoodMixin[0].Fields()
	_ = requiredgoodMixinFields0
	requiredgoodFields := schema.RequiredGood{}.Fields()
	_ = requiredgoodFields
	// requiredgoodDescCreatedAt is the schema descriptor for created_at field.
	requiredgoodDescCreatedAt := requiredgoodMixinFields0[0].Descriptor()
	// requiredgood.DefaultCreatedAt holds the default value on creation for the created_at field.
	requiredgood.DefaultCreatedAt = requiredgoodDescCreatedAt.Default.(func() uint32)
	// requiredgoodDescUpdatedAt is the schema descriptor for updated_at field.
	requiredgoodDescUpdatedAt := requiredgoodMixinFields0[1].Descriptor()
	// requiredgood.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	requiredgood.DefaultUpdatedAt = requiredgoodDescUpdatedAt.Default.(func() uint32)
	// requiredgood.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	requiredgood.UpdateDefaultUpdatedAt = requiredgoodDescUpdatedAt.UpdateDefault.(func() uint32)
	// requiredgoodDescDeletedAt is the schema descriptor for deleted_at field.
	requiredgoodDescDeletedAt := requiredgoodMixinFields0[2].Descriptor()
	// requiredgood.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	requiredgood.DefaultDeletedAt = requiredgoodDescDeletedAt.Default.(func() uint32)
	// requiredgoodDescMust is the schema descriptor for must field.
	requiredgoodDescMust := requiredgoodFields[3].Descriptor()
	// requiredgood.DefaultMust holds the default value on creation for the must field.
	requiredgood.DefaultMust = requiredgoodDescMust.Default.(bool)
	// requiredgoodDescCommission is the schema descriptor for commission field.
	requiredgoodDescCommission := requiredgoodFields[4].Descriptor()
	// requiredgood.DefaultCommission holds the default value on creation for the commission field.
	requiredgood.DefaultCommission = requiredgoodDescCommission.Default.(bool)
	// requiredgoodDescID is the schema descriptor for id field.
	requiredgoodDescID := requiredgoodFields[0].Descriptor()
	// requiredgood.DefaultID holds the default value on creation for the id field.
	requiredgood.DefaultID = requiredgoodDescID.Default.(func() uuid.UUID)
	scoreMixin := schema.Score{}.Mixin()
	score.Policy = privacy.NewPolicies(scoreMixin[0], schema.Score{})
	score.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := score.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	scoreMixinFields0 := scoreMixin[0].Fields()
	_ = scoreMixinFields0
	scoreFields := schema.Score{}.Fields()
	_ = scoreFields
	// scoreDescCreatedAt is the schema descriptor for created_at field.
	scoreDescCreatedAt := scoreMixinFields0[0].Descriptor()
	// score.DefaultCreatedAt holds the default value on creation for the created_at field.
	score.DefaultCreatedAt = scoreDescCreatedAt.Default.(func() uint32)
	// scoreDescUpdatedAt is the schema descriptor for updated_at field.
	scoreDescUpdatedAt := scoreMixinFields0[1].Descriptor()
	// score.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	score.DefaultUpdatedAt = scoreDescUpdatedAt.Default.(func() uint32)
	// score.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	score.UpdateDefaultUpdatedAt = scoreDescUpdatedAt.UpdateDefault.(func() uint32)
	// scoreDescDeletedAt is the schema descriptor for deleted_at field.
	scoreDescDeletedAt := scoreMixinFields0[2].Descriptor()
	// score.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	score.DefaultDeletedAt = scoreDescDeletedAt.Default.(func() uint32)
	// scoreDescScore is the schema descriptor for score field.
	scoreDescScore := scoreFields[4].Descriptor()
	// score.DefaultScore holds the default value on creation for the score field.
	score.DefaultScore = scoreDescScore.Default.(decimal.Decimal)
	// scoreDescID is the schema descriptor for id field.
	scoreDescID := scoreFields[0].Descriptor()
	// score.DefaultID holds the default value on creation for the id field.
	score.DefaultID = scoreDescID.Default.(func() uuid.UUID)
	stockMixin := schema.Stock{}.Mixin()
	stock.Policy = privacy.NewPolicies(stockMixin[0], schema.Stock{})
	stock.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := stock.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	stockMixinFields0 := stockMixin[0].Fields()
	_ = stockMixinFields0
	stockFields := schema.Stock{}.Fields()
	_ = stockFields
	// stockDescCreatedAt is the schema descriptor for created_at field.
	stockDescCreatedAt := stockMixinFields0[0].Descriptor()
	// stock.DefaultCreatedAt holds the default value on creation for the created_at field.
	stock.DefaultCreatedAt = stockDescCreatedAt.Default.(func() uint32)
	// stockDescUpdatedAt is the schema descriptor for updated_at field.
	stockDescUpdatedAt := stockMixinFields0[1].Descriptor()
	// stock.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	stock.DefaultUpdatedAt = stockDescUpdatedAt.Default.(func() uint32)
	// stock.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	stock.UpdateDefaultUpdatedAt = stockDescUpdatedAt.UpdateDefault.(func() uint32)
	// stockDescDeletedAt is the schema descriptor for deleted_at field.
	stockDescDeletedAt := stockMixinFields0[2].Descriptor()
	// stock.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	stock.DefaultDeletedAt = stockDescDeletedAt.Default.(func() uint32)
	// stockDescTotal is the schema descriptor for total field.
	stockDescTotal := stockFields[2].Descriptor()
	// stock.DefaultTotal holds the default value on creation for the total field.
	stock.DefaultTotal = stockDescTotal.Default.(decimal.Decimal)
	// stockDescLocked is the schema descriptor for locked field.
	stockDescLocked := stockFields[3].Descriptor()
	// stock.DefaultLocked holds the default value on creation for the locked field.
	stock.DefaultLocked = stockDescLocked.Default.(decimal.Decimal)
	// stockDescInService is the schema descriptor for in_service field.
	stockDescInService := stockFields[4].Descriptor()
	// stock.DefaultInService holds the default value on creation for the in_service field.
	stock.DefaultInService = stockDescInService.Default.(decimal.Decimal)
	// stockDescWaitStart is the schema descriptor for wait_start field.
	stockDescWaitStart := stockFields[5].Descriptor()
	// stock.DefaultWaitStart holds the default value on creation for the wait_start field.
	stock.DefaultWaitStart = stockDescWaitStart.Default.(decimal.Decimal)
	// stockDescSold is the schema descriptor for sold field.
	stockDescSold := stockFields[6].Descriptor()
	// stock.DefaultSold holds the default value on creation for the sold field.
	stock.DefaultSold = stockDescSold.Default.(decimal.Decimal)
	// stockDescAppLocked is the schema descriptor for app_locked field.
	stockDescAppLocked := stockFields[7].Descriptor()
	// stock.DefaultAppLocked holds the default value on creation for the app_locked field.
	stock.DefaultAppLocked = stockDescAppLocked.Default.(decimal.Decimal)
	// stockDescID is the schema descriptor for id field.
	stockDescID := stockFields[0].Descriptor()
	// stock.DefaultID holds the default value on creation for the id field.
	stock.DefaultID = stockDescID.Default.(func() uuid.UUID)
	vendorbrandMixin := schema.VendorBrand{}.Mixin()
	vendorbrand.Policy = privacy.NewPolicies(vendorbrandMixin[0], schema.VendorBrand{})
	vendorbrand.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := vendorbrand.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	vendorbrandMixinFields0 := vendorbrandMixin[0].Fields()
	_ = vendorbrandMixinFields0
	vendorbrandFields := schema.VendorBrand{}.Fields()
	_ = vendorbrandFields
	// vendorbrandDescCreatedAt is the schema descriptor for created_at field.
	vendorbrandDescCreatedAt := vendorbrandMixinFields0[0].Descriptor()
	// vendorbrand.DefaultCreatedAt holds the default value on creation for the created_at field.
	vendorbrand.DefaultCreatedAt = vendorbrandDescCreatedAt.Default.(func() uint32)
	// vendorbrandDescUpdatedAt is the schema descriptor for updated_at field.
	vendorbrandDescUpdatedAt := vendorbrandMixinFields0[1].Descriptor()
	// vendorbrand.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	vendorbrand.DefaultUpdatedAt = vendorbrandDescUpdatedAt.Default.(func() uint32)
	// vendorbrand.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	vendorbrand.UpdateDefaultUpdatedAt = vendorbrandDescUpdatedAt.UpdateDefault.(func() uint32)
	// vendorbrandDescDeletedAt is the schema descriptor for deleted_at field.
	vendorbrandDescDeletedAt := vendorbrandMixinFields0[2].Descriptor()
	// vendorbrand.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	vendorbrand.DefaultDeletedAt = vendorbrandDescDeletedAt.Default.(func() uint32)
	// vendorbrandDescName is the schema descriptor for name field.
	vendorbrandDescName := vendorbrandFields[1].Descriptor()
	// vendorbrand.DefaultName holds the default value on creation for the name field.
	vendorbrand.DefaultName = vendorbrandDescName.Default.(string)
	// vendorbrand.NameValidator is a validator for the "name" field. It is called by the builders before save.
	vendorbrand.NameValidator = vendorbrandDescName.Validators[0].(func(string) error)
	// vendorbrandDescLogo is the schema descriptor for logo field.
	vendorbrandDescLogo := vendorbrandFields[2].Descriptor()
	// vendorbrand.DefaultLogo holds the default value on creation for the logo field.
	vendorbrand.DefaultLogo = vendorbrandDescLogo.Default.(string)
	// vendorbrand.LogoValidator is a validator for the "logo" field. It is called by the builders before save.
	vendorbrand.LogoValidator = vendorbrandDescLogo.Validators[0].(func(string) error)
	// vendorbrandDescID is the schema descriptor for id field.
	vendorbrandDescID := vendorbrandFields[0].Descriptor()
	// vendorbrand.DefaultID holds the default value on creation for the id field.
	vendorbrand.DefaultID = vendorbrandDescID.Default.(func() uuid.UUID)
	vendorlocationMixin := schema.VendorLocation{}.Mixin()
	vendorlocation.Policy = privacy.NewPolicies(vendorlocationMixin[0], schema.VendorLocation{})
	vendorlocation.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := vendorlocation.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	vendorlocationMixinFields0 := vendorlocationMixin[0].Fields()
	_ = vendorlocationMixinFields0
	vendorlocationFields := schema.VendorLocation{}.Fields()
	_ = vendorlocationFields
	// vendorlocationDescCreatedAt is the schema descriptor for created_at field.
	vendorlocationDescCreatedAt := vendorlocationMixinFields0[0].Descriptor()
	// vendorlocation.DefaultCreatedAt holds the default value on creation for the created_at field.
	vendorlocation.DefaultCreatedAt = vendorlocationDescCreatedAt.Default.(func() uint32)
	// vendorlocationDescUpdatedAt is the schema descriptor for updated_at field.
	vendorlocationDescUpdatedAt := vendorlocationMixinFields0[1].Descriptor()
	// vendorlocation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	vendorlocation.DefaultUpdatedAt = vendorlocationDescUpdatedAt.Default.(func() uint32)
	// vendorlocation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	vendorlocation.UpdateDefaultUpdatedAt = vendorlocationDescUpdatedAt.UpdateDefault.(func() uint32)
	// vendorlocationDescDeletedAt is the schema descriptor for deleted_at field.
	vendorlocationDescDeletedAt := vendorlocationMixinFields0[2].Descriptor()
	// vendorlocation.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	vendorlocation.DefaultDeletedAt = vendorlocationDescDeletedAt.Default.(func() uint32)
	// vendorlocationDescCountry is the schema descriptor for country field.
	vendorlocationDescCountry := vendorlocationFields[1].Descriptor()
	// vendorlocation.DefaultCountry holds the default value on creation for the country field.
	vendorlocation.DefaultCountry = vendorlocationDescCountry.Default.(string)
	// vendorlocation.CountryValidator is a validator for the "country" field. It is called by the builders before save.
	vendorlocation.CountryValidator = vendorlocationDescCountry.Validators[0].(func(string) error)
	// vendorlocationDescProvince is the schema descriptor for province field.
	vendorlocationDescProvince := vendorlocationFields[2].Descriptor()
	// vendorlocation.DefaultProvince holds the default value on creation for the province field.
	vendorlocation.DefaultProvince = vendorlocationDescProvince.Default.(string)
	// vendorlocation.ProvinceValidator is a validator for the "province" field. It is called by the builders before save.
	vendorlocation.ProvinceValidator = vendorlocationDescProvince.Validators[0].(func(string) error)
	// vendorlocationDescCity is the schema descriptor for city field.
	vendorlocationDescCity := vendorlocationFields[3].Descriptor()
	// vendorlocation.DefaultCity holds the default value on creation for the city field.
	vendorlocation.DefaultCity = vendorlocationDescCity.Default.(string)
	// vendorlocation.CityValidator is a validator for the "city" field. It is called by the builders before save.
	vendorlocation.CityValidator = vendorlocationDescCity.Validators[0].(func(string) error)
	// vendorlocationDescAddress is the schema descriptor for address field.
	vendorlocationDescAddress := vendorlocationFields[4].Descriptor()
	// vendorlocation.DefaultAddress holds the default value on creation for the address field.
	vendorlocation.DefaultAddress = vendorlocationDescAddress.Default.(string)
	// vendorlocation.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	vendorlocation.AddressValidator = vendorlocationDescAddress.Validators[0].(func(string) error)
	// vendorlocationDescBrandID is the schema descriptor for brand_id field.
	vendorlocationDescBrandID := vendorlocationFields[5].Descriptor()
	// vendorlocation.DefaultBrandID holds the default value on creation for the brand_id field.
	vendorlocation.DefaultBrandID = vendorlocationDescBrandID.Default.(func() uuid.UUID)
	// vendorlocationDescID is the schema descriptor for id field.
	vendorlocationDescID := vendorlocationFields[0].Descriptor()
	// vendorlocation.DefaultID holds the default value on creation for the id field.
	vendorlocation.DefaultID = vendorlocationDescID.Default.(func() uuid.UUID)
}

const (
	Version = "v0.11.3" // Version of ent codegen.
)
